'''import board
import busio
import digitalio
from time import sleep

led = digitalio.DigitalInOut(board.LED)
led.direction = digitalio.Direction.OUTPUT

uart = busio.UART(board.GP0, board.GP1, baudrate=9600)
print("alive")

def recieve():
        led.value = True
        try: # Tries to decode
            dec = data.decode('ascii') # Turns bytes into string
            print(f"RAW: {dec}")
            arr = [int(val) for val in dec.split(",")] # Turns string into array
            aileron = arr[0] # Separates array into variables
            elevator = arr[1]

        except Exception as err: # If failure returns None
                led.value = False
                return None 
        
        led.value = False
        return aileron, elevator

while True:
    data = uart.read(32)
    #if data is not None: # If anything is recieved
    #      print(recieve())
    print(recieve())
    sleep(.5)
'''
"""CircuitPython Essentials UART Serial example"""
import board
import busio
import digitalio

# For most CircuitPython boards:
led = digitalio.DigitalInOut(board.LED)
# For QT Py M0:
# led = digitalio.DigitalInOut(board.SCK)
led.direction = digitalio.Direction.OUTPUT

uart = busio.UART(board.GP0, board.GP1, baudrate=9600)

while True:
    data = uart.read(32)  # read up to 32 bytes
    # print(data)  # this is a bytearray type

    if data is not None:
        led.value = True

        # convert bytearray to string
        data_string = ''.join([chr(b) for b in data])
        print(data_string, end="")

        led.value = False